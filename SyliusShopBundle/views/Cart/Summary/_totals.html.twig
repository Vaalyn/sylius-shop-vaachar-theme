{% import "@SyliusShop/Common/Macro/money.html.twig" as money %}

{% set itemsSubtotal = sylius_order_items_subtotal(cart) %}
{% set taxIncluded = sylius_order_tax_included(cart) %}
{% set taxExcluded = sylius_order_tax_excluded(cart) %}
{% set customerOptionAdjustment = constant('Brille24\\SyliusCustomerOptionsPlugin\\Services\\CustomerOptionRecalculator::CUSTOMER_OPTION_ADJUSTMENT') %}

<div class="ui inverted segment">
    <h2 class="ui dividing inverted header">{{ 'sylius.ui.summary'|trans }}</h2>

    {{ sylius_template_event('sylius.shop.cart.summary.totals', {'cart': cart}) }}

    <table class="ui very basic unstackable inverted table">
        <tbody>
        <tr>
            <td>{{ 'sylius.ui.items_total'|trans }}:</td>
            <td class="right aligned">{{ money.convertAndFormat(itemsSubtotal) }}</td>
        </tr>
        {% if cart.getAdjustmentsTotalRecursively(customerOptionAdjustment) > 0 %}
            <tr>
                <td>{{ 'brille24.ui.customization_total'|trans }}:</td>
                <td class="right aligned">{{ money.convertAndFormat(cart.getAdjustmentsTotalRecursively(customerOptionAdjustment)) }}</td>
            </tr>
        {% endif %}
        {% if cart.orderPromotionTotal %}
            <tr>
                <td>{{ 'sylius.ui.discount'|trans }}:</td>
                <td id="sylius-cart-promotion-total" {{ sylius_test_html_attribute('cart-promotion-total') }} class="right aligned">{{ money.convertAndFormat(cart.orderPromotionTotal) }}</td>
            </tr>
        {% endif %}
        {% if cart.shipments is not empty %}
            <tr>
                <td>{{ 'sylius.ui.shipping_estimated_cost'|trans }}:</td>
                <td class="right aligned">
                    {% if cart.getAdjustmentsTotal('shipping') > cart.shippingTotal %}
                        <span class="old-price">{{ money.convertAndFormat(cart.getAdjustmentsTotal('shipping')) }}</span>
                    {% endif %}
                    <span id="sylius-cart-shipping-total" {{ sylius_test_html_attribute('cart-shipping-total') }}>{{ money.convertAndFormat(cart.shippingTotal) }}</span>
                </td>
            </tr>
        {% endif %}

        {% set allItemsGermanSmallBusiness = true %}

        {% for item in cart.items %}
            {% set productVariantTaxRate = vaachar_tax_rate_product_variant(item.getVariant.product|sylius_resolve_variant) %}
            {% set isGermanSmallBusiness = vaachar_is_german_small_business_tax_rate(productVariantTaxRate) %}

            {% if isGermanSmallBusiness == false %}
                {% set allItemsGermanSmallBusiness = false %}
            {% endif %}
        {% endfor %}

        {% if allItemsGermanSmallBusiness == true %}
            <tr>
                <td colspan="3">
                    <small>{{ 'vaachar.tax_rate.german_small_business'|trans }}</small>
                </td>
            </tr>
        {% else %}
            <tr {% if taxIncluded and not taxExcluded %}class="tax-disabled"{% endif %}>
                <td>{{ 'sylius.ui.taxes_total'|trans }}:</td>
                <td class="right aligned">
                    {% if not taxIncluded and not taxExcluded %}
                        <div id="sylius-cart-tax-none" {{ sylius_test_html_attribute('cart-no-tax') }}>{{ money.convertAndFormat(0) }}</div>
                    {% endif %}
                    {% if taxExcluded %}
                        <div id="sylius-cart-tax-excluded" {{ sylius_test_html_attribute('cart-tax-exluded') }}>{{ money.convertAndFormat(taxExcluded) }}</div>
                    {% endif %}
                    {% if taxIncluded %}
                        <div class="tax-disabled">
                            <small>({{ 'sylius.ui.included_in_price'|trans }})</small>
                            <span id="sylius-cart-tax-included" {{ sylius_test_html_attribute('cart-tax-included') }}>{{ money.convertAndFormat(taxIncluded) }}</span>
                        </div>
                    {% endif %}
                </td>
            </tr>
        {% endif %}
        <tr class="ui large inverted header">
            <td>{{ 'sylius.ui.order_total'|trans }}:</td>
            <td id="sylius-cart-grand-total" {{ sylius_test_html_attribute('cart-grand-total') }} class="right aligned">{{ money.convertAndFormat(cart.total) }}</td>
        </tr>
        {% if cart.currencyCode is not same as(sylius.currencyCode) %}
            <tr>
                <td>{{ 'sylius.ui.base_currency_order_total'|trans }}:</td>
                <td id="sylius-cart-base-grand-total" {{ sylius_test_html_attribute('cart-base-grand-total') }} class="right aligned">{{ money.format(cart.total, cart.currencyCode) }}</td>
            </tr>
        {% endif %}
        </tbody>
    </table>
</div>
